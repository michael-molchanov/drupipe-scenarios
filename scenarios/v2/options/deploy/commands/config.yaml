project_subdirectory: ""

params:
  actions:
    Commands:
      params:
        through_ssh_chain:
          - ${context.servers[context.environment].user}@${context.servers[context.environment].host}
        execution_dir: ${context.environments[context.environment].root}/current/${context.project_subdirectory}
      deploy:
        dev:
          params:
            actions:
              - 'echo "Add git config."'
              - 'git config --global user.email "zebraproject@adyax.com"'
              - 'git config --global user.name "zebra"'
              - 'echo "Init repo."'
              - 'git init .'
              - 'echo "Update origin."'
              - 'git remote rm origin || true'
              - 'git remote add -t ${context.components.master.states.development.version} -f origin ${context.components.master.repo}'
              - 'echo "Update repo."'
              - 'git checkout ${context.components.master.states.development.version}'
              - 'git diff --name-only ${context.components.master.states.development.version} origin/${context.components.master.states.development.version} | tee .unipipe.changed_files'
              - 'git reset --hard origin/${context.components.master.states.development.version}'
              - 'git pull origin ${context.components.master.states.development.version}'
        stage:
          params:
            actions:
              - 'echo "Add git config."'
              - 'git config --global user.email "zebraproject@adyax.com"'
              - 'git config --global user.name "zebra"'
              - 'echo "Init repo."'
              - 'git init .'
              - 'echo "Update origin."'
              - 'git remote rm origin || true'
              - 'git remote add -t ${context.components.master.states.staging.version} -f origin ${context.components.master.repo}'
              - 'echo "Update repo."'
              - 'git checkout ${context.components.master.states.staging.version}'
              - 'git diff --name-only ${context.components.master.states.staging.version} origin/${context.components.master.states.staging.version} | tee .unipipe.changed_files'
              - 'git reset --hard origin/${context.components.master.states.staging.version}'
              - 'git pull origin ${context.components.master.states.staging.version}'

